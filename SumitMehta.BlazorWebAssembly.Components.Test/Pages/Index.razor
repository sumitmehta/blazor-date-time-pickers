@page "/"
@using SumitMehta.BlazorWebAssembly.Components

<h1>Blazor Date and Time Picker Demos</h1>

<div class="form-group">
    <!-- Date of birth label -->
    <div class="row">
        <div class="col-sm-12">
            <label>Date of Birth:</label>
        </div>
    </div>

    <!-- Date of birth field -->
    <div class="row form-row">
        <div class="input-group mb-2 col-sm-4">
            <!-- Use the span here instead of textbox, since we don't want edit functionality -->
            <span class="form-control">@(YourDate.HasValue ? YourDate.Value.ToString("MMMM dd yyyy") : "")</span>

            <!-- 'Show Calendar' button -->
            <div class="input-group-append">
                <button class="input-group-text " @onclick="Show_Calendar">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-calendar3" viewBox="0 0 16 16">
                        <path d="M14 0H2a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2zM1 3.857C1 3.384 1.448 3 2 3h12c.552 0 1 .384 1 .857v10.286c0 .473-.448.857-1 .857H2c-.552 0-1-.384-1-.857V3.857z" />
                        <path d="M6.5 7a1 1 0 1 0 0-2 1 1 0 0 0 0 2zm3 0a1 1 0 1 0 0-2 1 1 0 0 0 0 2zm3 0a1 1 0 1 0 0-2 1 1 0 0 0 0 2zm-9 3a1 1 0 1 0 0-2 1 1 0 0 0 0 2zm3 0a1 1 0 1 0 0-2 1 1 0 0 0 0 2zm3 0a1 1 0 1 0 0-2 1 1 0 0 0 0 2zm3 0a1 1 0 1 0 0-2 1 1 0 0 0 0 2zm-9 3a1 1 0 1 0 0-2 1 1 0 0 0 0 2zm3 0a1 1 0 1 0 0-2 1 1 0 0 0 0 2zm3 0a1 1 0 1 0 0-2 1 1 0 0 0 0 2z" />
                    </svg>
                </button>
            </div>
        </div>
    </div>

    <!-- Our Date Picker -->
    <div class="row form-row">
        <div class="col-sm-12" style="position: relative">
            <DatePicker @ref="DatePicker" @bind-SelectedDate="YourDate" />
        </div>
    </div>

    <!-- Some instructions -->
    <div class="row">
        <div class="col-sm-12">
            <small class="form-text text-muted">Click the button to open the calendar.</small>
        </div>
    </div>
</div>

<!-- Time of birth label -->
<div class="form-group">
    <div class="row">
        <div class="col-sm-12">
            <label>Time of Birth:</label>
        </div>
    </div>

    <div class="row form-row">
        <div class="input-group mb-2 col-md-4">
            <!-- Use the span here instead of textbox, since we don't want edit functionality -->
            <span class="form-control">@(YourTime.HasValue ? YourTime.Value.ToString() : "")</span>

            <!-- 'Show Clock' button -->
            <div class="input-group-append">
                <button class="input-group-text " @onclick="Show_Clock">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-alarm" viewBox="0 0 16 16">
                        <path d="M8.5 5.5a.5.5 0 0 0-1 0v3.362l-1.429 2.38a.5.5 0 1 0 .858.515l1.5-2.5A.5.5 0 0 0 8.5 9V5.5z" />
                        <path d="M6.5 0a.5.5 0 0 0 0 1H7v1.07a7.001 7.001 0 0 0-3.273 12.474l-.602.602a.5.5 0 0 0 .707.708l.746-.746A6.97 6.97 0 0 0 8 16a6.97 6.97 0 0 0 3.422-.892l.746.746a.5.5 0 0 0 .707-.708l-.601-.602A7.001 7.001 0 0 0 9 2.07V1h.5a.5.5 0 0 0 0-1h-3zm1.038 3.018a6.093 6.093 0 0 1 .924 0 6 6 0 1 1-.924 0zM0 3.5c0 .753.333 1.429.86 1.887A8.035 8.035 0 0 1 4.387 1.86 2.5 2.5 0 0 0 0 3.5zM13.5 1c-.753 0-1.429.333-1.887.86a8.035 8.035 0 0 1 3.527 3.527A2.5 2.5 0 0 0 13.5 1z" />
                    </svg>
                </button>
            </div>
        </div>
    </div>

    <!-- Our Time Picker -->
    <div class="row form-row">
        <div class="col-sm-12" style="position: relative">
            <TimePicker @ref="TimePicker" @bind-SelectedTime="YourTime" IsEnabled="@YourTime.HasValue" />
        </div>
    </div>

    <!-- Some instructions -->
    <div class="row">
        <div class="col-sm-12">
            <small class="form-text text-muted">Click the button to open the clock and then click the center button to enable/disable the clock.</small>
        </div>
    </div>
</div>

@code {

    /// <summary>
    /// This is the date field which is used by our date picker via two-way binding
    /// </summary>
    protected DateTime? YourDate { get; set; }

    /// <summary>
    /// This is the timespan field which is used by our time picker via two-way binding
    /// </summary>
    protected TimeSpan? YourTime { get; set; }

    /// <summary>
    /// The model for date picker
    /// </summary>
    protected DatePickerBase DatePicker { get; set; }

    /// <summary>
    /// The model for time picker
    /// </summary>
    protected TimePickerBase TimePicker { get; set; }

    /// <summary>
    /// Opens/Shows the date picker
    /// </summary>
    /// <param name="args">Mouse event arguments</param>
    protected void Show_Calendar(MouseEventArgs args)
    {
        if (DatePicker.IsVisible) DatePicker.Hide();
        else DatePicker.Show();
    }

    /// <summary>
    /// Opens/Shows the time picker
    /// </summary>
    /// <param name="args">Mouse event arguments</param>
    protected void Show_Clock(MouseEventArgs args)
    {
        if (TimePicker.IsVisible) TimePicker.Hide();
        else TimePicker.Show();
    }

    protected override Task OnInitializedAsync()
    {
        return base.OnInitializedAsync();
    }
}